schedules:
  - cron: "0 8 * * *"
    displayName: "Nightly build"
    branches:
      include:
        - master
    always: true

pr: none
trigger: none

jobs:
- job:
  strategy:
    matrix:
      Neon:
        agentName: Neon
        buildType: Debug

  pool:
    name: BlueQuartz Self Hosted
    demands:
      - Agent.Name -equals $(agentName)
      - BQ.NightlyBuild

  workspace:
    clean: all

  timeoutInMinutes: 120

  variables:
    dream3d_source_dir: $(Build.Repository.LocalPath)/Workspace/DREAM3D
    ci_build_dir: $(Build.Repository.LocalPath)/Build

  steps:
  - script: |
      echo Agent.Name=$(Agent.Name)
      echo Agent.OS=$(Agent.OS)
      echo Agent.WorkFolder=$(Agent.WorkFolder)
    displayName: 'Dump Azure Variables'

  - bash: |
      echo "##vso[task.setvariable variable=DREAM3D_NIGHTLY_CACHE]$DREAM3D_NIGHTLY_CACHE"
      echo DREAM3D_NIGHTLY_CACHE=$DREAM3D_NIGHTLY_CACHE
    condition: or(eq(variables['Agent.OS'], 'Linux'), eq(variables['Agent.OS'], 'Darwin'))
    displayName: Copy environment variables (Linux/macOS)

  - powershell: |
      Write-Host "##vso[task.setvariable variable=DREAM3D_NIGHTLY_CACHE]$DREAM3D_NIGHTLY_CACHE"
      echo DREAM3D_NIGHTLY_CACHE=$DREAM3D_NIGHTLY_CACHE
    condition: eq(variables['Agent.OS'], 'Windows_NT')
    displayName: Copy environment variables (Windows)

  - script: |
      cmake -G Ninja -S $(Build.Repository.LocalPath) -B $(ci_build_dir) -DCI_CLONE_DREAM3D_DATA:BOOL=OFF
      cmake --build $(ci_build_dir)
    displayName: Clone Repositories

  - script: |
      cmake -S $(dream3d_source_dir) -B $(Build.BinariesDirectory) -G Ninja -C $(DREAM3D_NIGHTLY_CACHE) -DCMAKE_BUILD_TYPE:STRING=$(buildType) -DSITE:STRING="$(Agent.MachineName).bluequartz.net"
    displayName: Configure DREAM3D

  - script: |
      cmake --build $(Build.BinariesDirectory) --config $(buildType) --target all
    displayName: Build DREAM3D

  - script: |
      cd $(Build.BinariesDirectory)
      ctest -C $(buildType) -D Experimental --timeout 7200
    continueOnError: true
    displayName: Testing DREAM3D

  - task: PublishTestResults@2
    inputs:
      testResultsFormat: CTest
      testResultsFiles: $(Build.BinariesDirectory)/Testing/*/Test.xml
      testRunTitle: CTest_$(Agent.Name)_$(Agent.OS)
      failTaskOnFailedTests: true
    displayName: Publish Test Results

  - script: |
      cd $(Build.BinariesDirectory)
      cpack -C $(buildType) -V
    displayName: Packing DREAM3D
